"use client"
import { useState, useEffect } from "react"
import { ChevronDown, ChevronUp, Link } from "lucide-react"
import NextLink from "next/link"

export default function FAQ() {
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })
  const [openItems, setOpenItems] = useState<number[]>([])

  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      setMousePosition({ x: e.clientX, y: e.clientY })
    }

    window.addEventListener("mousemove", handleMouseMove)
    return () => window.removeEventListener("mousemove", handleMouseMove)
  }, [])

  const toggleItem = (index: number) => {
    setOpenItems((prev) => (prev.includes(index) ? prev.filter((item) => item !== index) : [...prev, index]))
  }

  const faqs = [
    {
      question: "What is WikiStudio and how does it work?",
      answer:
        "WikiStudio is an AI-powered platform designed to help you create high-quality Wikipedia articles. It uses advanced artificial intelligence to assist with content generation, fact-checking, citation management, and grammar optimization. Simply choose your topic type, provide basic information, and our AI will help you craft a comprehensive, well-structured article that meets Wikipedia's standards.",
    },
    {
      question: "Is the content generated by WikiStudio plagiarism-free?",
      answer:
        "WikiStudio includes built-in plagiarism detection that scans your content in real-time against millions of sources. Our AI generates original content and provides proper citations for all factual claims. Every article goes through multiple originality checks to ensure it meets Wikipedia's strict authenticity standards.",
    },
    {
      question: "What types of Wikipedia articles can I create?",
      answer:
        "WikiStudio supports all major Wikipedia article types including biographical articles about notable individuals, organizational profiles for companies and institutions, scientific and cultural phenomena documentation, and historical accounts and events. Our platform provides specialized templates and writing patterns for each category.",
    },
    {
      question: "How accurate is the AI-generated content?",
      answer:
        "Our AI maintains a 95% accuracy rate through continuous training on verified Wikipedia content and reliable sources. The system includes automatic fact-checking against trusted databases and provides source verification for all claims. However, we always recommend human review and additional fact-checking before publication.",
    },
    
    {
      question: "What languages does WikiStudio support?",
      answer:
        "WikiStudio currently supports over 50 languages, including all major Wikipedia languages like English, Spanish, French, German, Chinese, Japanese, Arabic, and many more. The AI can generate content in your chosen language and maintain proper grammar and style conventions for each language.",
    },
    
  ]

  return (
    <div className="relative min-h-screen bg-black overflow-hidden">
      {/* Background Effects - Same as other components */}
      <div className="absolute inset-0">
        {/* Base space gradient */}
        <div className="absolute inset-0 bg-gradient-to-b from-purple-950 via-purple-950 to-black" />

        {/* White Grid Background with Warp Effect */}
        <div className="absolute inset-0 opacity-10">
          <svg
            width="100%"
            height="100%"
            className="absolute inset-0"
            style={{
              transform: `perspective(1000px) rotateX(60deg) rotateY(0deg)`,
              transformOrigin: "center center",
            }}
          >
            <defs>
              <pattern id="grid" width="50" height="50" patternUnits="userSpaceOnUse">
                <path d="M 50 0 L 0 0 0 50" fill="none" stroke="white" strokeWidth="1" opacity="0.3" />
              </pattern>
              <filter id="warp">
                <feTurbulence baseFrequency="0.02" numOctaves="3" result="noise" />
                <feDisplacementMap in="SourceGraphic" in2="noise" scale="0" className="warp-displacement" />
              </filter>
            </defs>
            <rect
              width="100%"
              height="100%"
              fill="url(#grid)"
              filter="url(#warp)"
              className="grid-warp"
              style={{
                transformOrigin: `${mousePosition.x}px ${mousePosition.y}px`,
              }}
            />
          </svg>
        </div>

        {/* Additional Grid Layers for Depth */}
        <div className="absolute inset-0 opacity-5">
          {[...Array(20)].map((_, i) => (
            <div
              key={`grid-line-h-${i}`}
              className="absolute w-full h-px bg-white"
              style={{
                top: `${i * 5}%`,
                transform: `perspective(800px) rotateX(45deg) translateZ(${i * 10}px)`,
              }}
            />
          ))}
          {[...Array(20)].map((_, i) => (
            <div
              key={`grid-line-v-${i}`}
              className="absolute h-full w-px bg-white"
              style={{
                left: `${i * 5}%`,
                transform: `perspective(800px) rotateX(45deg) translateZ(${i * 10}px)`,
              }}
            />
          ))}
        </div>

        {/* Nebula clouds */}
        <div className="absolute inset-0">
          <div
            className="absolute top-10 sm:top-20 left-5 sm:left-10 w-48 sm:w-96 h-48 sm:h-96 bg-gradient-to-r from-purple-600/10 via-blue-600/5 to-transparent rounded-full blur-2xl sm:blur-3xl animate-pulse"
            style={{ animationDuration: "8s" }}
          />
          <div
            className="absolute bottom-16 sm:bottom-32 right-10 sm:right-20 w-40 sm:w-80 h-40 sm:h-80 bg-gradient-to-l from-indigo-600/10 via-purple-600/5 to-transparent rounded-full blur-2xl sm:blur-3xl animate-pulse"
            style={{ animationDuration: "12s", animationDelay: "4s" }}
          />
        </div>

        {/* Moving blue sprint lines */}
        <div className="absolute inset-0 overflow-hidden">
          {[...Array(12)].map((_, i) => (
            <div
              key={`sprint-line-${i}`}
              className="absolute h-0.5 bg-gradient-to-r from-transparent via-blue-400 to-transparent opacity-80"
              style={{
                top: `${Math.random() * 100}%`,
                width: "200px",
                animation: `sprintLine 2s ease-out infinite`,
                animationDelay: `${Math.random() * 4}s`,
              }}
            />
          ))}
        </div>

        {/* Central radial gradient for depth */}
        <div className="absolute inset-0 bg-radial-gradient from-transparent via-black/30 to-black/70" />
      </div>

      {/* Main Content */}
      <div className="relative z-10 px-4 sm:px-6 lg:px-8 py-12 sm:py-20">
        <div className="max-w-4xl mx-auto">
          {/* Header Section */}
          <div className="text-center mb-16 sm:mb-24">
            <h1
              className="text-3xl sm:text-5xl md:text-7xl lg:text-8xl font-black text-transparent bg-clip-text bg-gradient-to-b from-white via-gray-200 to-gray-400 leading-none tracking-tighter mb-6"
              style={{
                textShadow: "0 0 20px rgba(255,255,255,0.1), 0 0 40px rgba(255,255,255,0.05)",
                transform: "perspective(1000px) rotateX(5deg) sm:rotateX(10deg)",
                filter: "drop-shadow(0 5px 15px rgba(0,0,0,0.5))",
              }}
            >
              FAQ
            </h1>
            <p
              className="text-sm sm:text-lg md:text-xl text-gray-300 leading-relaxed max-w-3xl mx-auto"
              style={{
                textShadow: "0 2px 10px rgba(0,0,0,0.5)",
                transform: "perspective(600px) rotateX(1deg) sm:rotateX(2deg)",
              }}
            >
              Everything you need to know about WikiStudio and creating Wikipedia articles with AI
            </p>
          </div>

          {/* FAQ Items */}
          <div className="space-y-4 sm:space-y-6">
            {faqs.map((faq, index) => (
              <div
                key={index}
                className="group"
                style={{
                  transform: "perspective(400px) rotateX(-1deg)",
                  animationDelay: `${index * 0.1}s`,
                }}
              >
                <div className="bg-gradient-to-b from-gray-800/50 to-gray-900/50 backdrop-blur-sm border border-gray-700/50 rounded-xl transition-all duration-300 group-hover:border-blue-500/50 group-hover:shadow-lg group-hover:shadow-blue-500/20 overflow-hidden">
                  {/* Question Header */}
                  <button
                    onClick={() => toggleItem(index)}
                    className="w-full p-6 sm:p-8 text-left flex items-center justify-between gap-4 transition-all duration-300 hover:bg-gray-800/30"
                  >
                    <h3 className="text-lg sm:text-xl font-bold text-white group-hover:text-blue-300 transition-colors pr-4">
                      {faq.question}
                    </h3>
                    <div className="flex-shrink-0 text-gray-400 group-hover:text-blue-400 transition-all duration-300">
                      {openItems.includes(index) ? (
                        <ChevronUp className="w-5 h-5 sm:w-6 sm:h-6" />
                      ) : (
                        <ChevronDown className="w-5 h-5 sm:w-6 sm:h-6" />
                      )}
                    </div>
                  </button>

                  {/* Answer Content */}
                  <div
                    className={`transition-all duration-500 ease-in-out overflow-hidden ${
                      openItems.includes(index) ? "max-h-96 opacity-100" : "max-h-0 opacity-0"
                    }`}
                  >
                    <div className="px-6 sm:px-8 pb-6 sm:pb-8">
                      <div className="h-px bg-gradient-to-r from-transparent via-gray-600/50 to-transparent mb-6" />
                      <p className="text-sm sm:text-base text-gray-400 leading-relaxed">{faq.answer}</p>
                    </div>
                  </div>

                  {/* Hover Effect Overlay */}
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-600/5 to-purple-600/5 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none" />
                </div>
              </div>
            ))}
          </div>

          
          {/* CTA Section */}
          <div className="text-center mt-16 sm:mt-24">
            <div className="max-w-3xl mx-auto mb-8">
              <h2
                className="text-2xl sm:text-4xl md:text-5xl font-black text-transparent bg-clip-text bg-gradient-to-b from-white via-gray-200 to-gray-400 leading-tight mb-4"
                style={{
                  textShadow: "0 0 20px rgba(255,255,255,0.1)",
                  transform: "perspective(800px) rotateX(3deg)",
                }}
              >
                Start Your Journey with WikiStudio
              </h2>
            </div>

            <div className="flex flex-col sm:flex-row gap-4 sm:gap-6 justify-center items-center">
              {/* ✅ Fixed Link-wrapped button */}
              <NextLink href="/writings" passHref>
                <button
                  className="w-full sm:w-auto px-8 sm:px-12 py-4 sm:py-6 text-base sm:text-lg font-semibold bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white border-0 rounded-lg shadow-2xl transform transition-all duration-300 hover:scale-105 cursor-pointer"
                  style={{
                    boxShadow: "0 8px 25px rgba(59, 130, 246, 0.3), 0 0 30px rgba(147, 51, 234, 0.2)",
                    transform: "perspective(400px) rotateX(-1deg) sm:rotateX(-2deg)",
                  }}
                >
                  Get Started
                </button>
              </NextLink>

              <button
                className="w-full sm:w-auto px-8 sm:px-12 py-4 sm:py-6 text-base sm:text-lg font-semibold border-2 border-gray-400 text-gray-300 hover:bg-gray-800 hover:border-gray-300 bg-transparent backdrop-blur-sm shadow-xl transform transition-all duration-300 hover:scale-105 rounded-lg cursor-pointer"
                style={{
                  boxShadow: "0 5px 20px rgba(255, 255, 255, 0.1)",
                  transform: "perspective(400px) rotateX(-1deg) sm:rotateX(-2deg)",
                }}
              >
                View Documentation
              </button>
            </div>
          </div>

        </div>
      </div>

      <style jsx>{`
        @keyframes sprintLine {
          0% {
            transform: translateX(-250px);
            opacity: 0;
          }
          20% {
            opacity: 1;
          }
          80% {
            opacity: 1;
          }
          100% {
            transform: translateX(calc(100vw + 250px));
            opacity: 0;
          }
        }

        .grid-warp:hover {
          filter: url(#warp);
        }

        .grid-warp:hover .warp-displacement {
          scale: 20;
          transition: scale 0.3s ease-out;
        }

        @media (hover: hover) {
          .grid-warp {
            transition: transform 0.1s ease-out;
          }
          
          .grid-warp:hover {
            transform: scale(1.02) perspective(1200px) rotateX(65deg);
          }
        }

        .bg-radial-gradient {
          background: radial-gradient(circle at center, var(--tw-gradient-stops));
        }
      `}</style>
    </div>
  )
}
